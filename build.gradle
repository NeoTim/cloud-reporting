apply plugin: 'application'
apply plugin: 'checkstyle'
apply plugin: 'eclipse'
apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'signing'

group = 'com.google.cloud'
archivesBaseName = 'reporting-lib'
version = '1.0'
sourceCompatibility = '1.7'
checkstyle { toolVersion = "6.4.1" }

buildscript {
  repositories {
    jcenter()
  }
}

repositories {
    mavenCentral()
}

dependencies {
  compile group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.0'
  compile group: 'com.google.guava', name: 'guava', version: '18.0'
  compile group: 'com.google.inject', name: 'guice', version: '3.0'
  compile group: 'org.apache.httpcomponents', name: 'httpasyncclient', version: '4.1'

  // Fixes Guice 3.0 issue with final visit (http://goo.gl/3TEbmx)
  compile group: 'cglib', name: 'cglib', version: '2.2'

  testCompile group: 'com.google.truth', name: 'truth', version: '0.25'
  testCompile group: 'junit', name: 'junit', version: '4.12'
  testCompile group: 'org.easymock', name: 'easymock', version: '3.3.1'
}

install {
  repositories.mavenInstaller {}
}

publishing {
  publications {
    mavenJava(MavenPublication) {}
  }
  repositories {
    maven {
      url "$buildDir/repo"
    }
  }
}

task wrapper(type: Wrapper) {
  gradleVersion = '2.2'
}

task javadocJar(type: Jar) {
  classifier = 'javadoc'
  from javadoc
}

task sourcesJar(type: Jar) {
  classifier = 'sources'
  from sourceSets.main.allSource
}

artifacts {
  archives javadocJar, sourcesJar
}

signing {
  sign configurations.archives
}

gradle.taskGraph.whenReady { taskGraph ->
  if (taskGraph.allTasks.any { it instanceof Sign }) {
    Console console = System.console()
    console.printf "\n\nWe have to sign some things in this build." +
                   "\n\nPlease enter your signing details.\n\n"

    def id = console.readLine("PGP Key Id: ")
    def file = console.readLine("PGP Secret Key Ring File (absolute path): ")
    def password = console.readPassword("PGP Private Key Password: ")

    allprojects { ext."signing.keyId" = id }
    allprojects { ext."signing.secretKeyRingFile" = file }
    allprojects { ext."signing.password" = password }

    console.printf "\nThanks.\n\n"
  }
}

uploadArchives {
  if (gradle.startParameter.taskNames.contains("uploadArchives")) {
    Console console = System.console()
    console.printf "\n\nPlease enter your Sonatype credentials.\n\n"
    if (!project.hasProperty('sonatypeUsername')) {
      def sonatypeUsername = console.readLine("Sonatype Username: ")
      allprojects { ext."sonatypeUsername" = sonatypeUsername }
    }

    if (!project.hasProperty('sonatypePassword')) {
      def sonatypePassword = new String(console.readPassword("Sonatype Password: "))
      allprojects { ext."sonatypePassword" = sonatypePassword }
    }

    repositories {
      mavenDeployer {
        beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

        repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
          authentication(userName: sonatypeUsername, password: sonatypePassword)
        }

        snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
          authentication(userName: sonatypeUsername, password: sonatypePassword)
        }

        pom.project {
          name 'Google Cloud Metrics Library'
          packaging 'jar'
          description 'Wrapper for Google Analytics reporting of usage metrics.'
          url 'http://github.com/google/cloud-reporting'

          scm {
            connection 'scm:git:git://github.com/google/cloud-reporting.git'
            developerConnection 'scm:git:git@github.com:google/cloud-reporting.git'
            url 'http://github.com/google/cloud-reporting'
          }

          licenses {
            license {
              name 'The Apache License, Version 2.0'
              url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
            }
          }

          developers {
            developer {
              id 'astroilov'
              name 'Andrey Stroilov'
              email 'astroilov@google.com'
            }
          }
        }
      }
    }
  }
}